"use client";

import { useEffect, useRef, useState } from "react";

export function AnimatedFeaturesText({
  className = "",
  duration = 1500,
  strokeWidth = 2,
}: {
  className?: string;
  duration?: number;
  strokeWidth?: number;
}) {
  const [isAnimating, setIsAnimating] = useState(false);
  const [hasAnimated, setHasAnimated] = useState(false);
  const svgRef = useRef<SVGSVGElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (!svgRef.current) return;

    const paths = svgRef.current.querySelectorAll("path");
    paths.forEach((path) => {
      const length = path.getTotalLength();
      path.style.strokeDasharray = length.toString();
      path.style.strokeDashoffset = length.toString();
      path.style.fillOpacity = "0";
      path.style.opacity = "0";
    });
  }, []);

  useEffect(() => {
    if (!containerRef.current || hasAnimated) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting && !hasAnimated) {
            setTimeout(() => {
              setIsAnimating(true);
              setHasAnimated(true);
            }, 100);
          }
        });
      },
      { threshold: 0.3 }
    );

    observer.observe(containerRef.current);

    return () => observer.disconnect();
  }, [hasAnimated]);

  useEffect(() => {
    if (!svgRef.current || !isAnimating) return;

    const paths = svgRef.current.querySelectorAll("path");
    const delayBetweenPaths = 250;

    paths.forEach((path, index) => {
      const length = path.getTotalLength();

      path.style.opacity = "1";
      path.style.strokeDasharray = length.toString();
      path.style.strokeDashoffset = length.toString();
      path.style.fillOpacity = "0";

      setTimeout(() => {
        path.style.transition = `stroke-dashoffset ${duration}ms ease-in-out, fill-opacity ${duration}ms ease-in-out`;
        path.style.strokeDashoffset = "0";
        path.style.fillOpacity = "1";
      }, delayBetweenPaths * index);
    });

    const timer = setTimeout(() => {
      setIsAnimating(false);
    }, delayBetweenPaths * paths.length + duration);

    return () => clearTimeout(timer);
  }, [isAnimating, duration]);

  return (
    <div ref={containerRef} className="inline-block">
      <svg
        ref={svgRef}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 1618 684"
        className={className}
      >
        <defs>
          <style>{`
            .logo-path {
              fill: #fff;
              stroke: #fff;
              stroke-width: ${strokeWidth};
              stroke-linecap: round;
              stroke-linejoin: round;
            }
          `}</style>
        </defs>
        <path
          className="logo-path"
          d="M150.344,305.249c4.266,3.166,89.801-26.837,101.518-30.971,23.19-8.181,55.238-24.353,78.943-26.057,9.303-.669,21.039-1.484,26.389,7.688,10.146,17.395-11.463,25.475-23.492,31.209-41.548,19.807-122.582,46.977-167.869,50.131-3.812.265-20.694-.935-22.031.969-14.61,62.465-19.596,127.909-34.945,190.055-3.101,12.557-7.34,34.17-17.488,42.512-17.419,14.32-40.431,2.526-37.914-19.921,1.499-13.372,9.419-34.705,12.579-49.414,8.411-39.138,13.357-79.017,20.622-118.378,13.057-70.738,29.354-142.124,54.72-209.389l-.174-1.269c-2.849-1.127-6.816-4.162-5.781-7.536,3.107-4.908,5.546,3.125,8.954.933,5.686-15.804,27.557-43.088,37.453-14.564,8.654-3.297,17.255-6.952,25.995-10.006,33.478-11.698,71.302-25.806,105.303-34.697,7.867-2.057,23.167-6.39,30.729-6.292,10.104.131,16.159,11.556,9.924,19.945-3.139,4.223-14.29,8.274-19.469,10.531-48.966,21.34-101.343,32.755-153.514,43.486l-30.454,131.036Z"
        />
        <path
          className="logo-path"
          d="M228.04,499.607c-15.923,1.953-33.041,5.925-49.019,2.477-4.708-1.016-11.647-2.255-10.212-7.376,5.369-.881,10.437,2.831,15.408,2.98,12.893.384,33.184-10.085,43.857-16.188,4.361-14.453,7.41-29.177,13.334-43.401,21.078-50.601,79.957-97.953,138.708-115.857,51.904-15.817,73.923,19.195,55.112,58.176-20.903,43.318-85.75,79.504-133.499,98.781-3.624,1.463-20.385,6.394-21.098,8.31-1.797,10.182-1.832,37.649,13.183,40.282,18.908,3.316,42.679-10.72,56.673-20.376,23.285-16.066,43.502-36.082,64.475-54.287,15.295-8.283,31.509,4.326,22.501,18.372-6.245,9.737-23.915,27.27-32.861,36.405-23.388,23.883-52.577,51.423-88.838,59.788-55.748,12.86-89.394-22.972-87.724-68.087ZM403.497,340.873c-3.851-.003-7.637-.244-11.464.436-23.53,4.182-58.959,41.213-72.635,58.046-12.109,14.904-22.22,30.933-28.692,48.308,1.058.862,8.42-3.802,9.935-4.673,19.372-11.136,38.741-23.631,56.157-36.945,22.244-17.005,45.149-38.122,46.699-65.173Z"
        />
        <path
          className="logo-path"
          d="M584.132,346.9c6.253-.914,11.736,2.489,15.646,7.235,19.375,23.514,13.46,110.625,14.625,143.175.23,6.427.403,12.922,1.304,19.319,14.581,2.748,20.901,12.444,17.563,26.838-4.339,18.712-17.075,40.462-39.458,37.065-37.666-5.718-29.1-74.945-30.948-101.978-10.391,16.377-18.226,34.456-28.996,50.615-12.42,18.635-29.234,42.255-55.074,38.236-48.16-7.491-26.602-100.985-14.857-130.854,14.922-37.952,45.96-73.333,81.702-93.198,11.366-6.317,36.855-17.608,38.492,3.548ZM498.378,507.442c26.57-26.499,44.609-58.621,55.196-94.721,4.344-14.813,6.744-30.672,11.06-45.56.558-1.924,4.781-12.078,4.258-12.526-48.751,33.827-69.954,94.839-70.514,152.807Z"
        />
        <path
          className="logo-path"
          d="M683.419,405.031c-6.328-.67-20.665-5.285-25.1-9.642-7.168-7.041-6.686-18.517.719-25.192,8.819-7.951,40.84-7.263,53.329-9.345,2.88-15.35,9.185-29.86,13.45-44.823,9.5-33.326,16.263-64.731,28.783-97.55,6.665-17.471,18.932-50.003,29.422-64.694,8.41-11.778,24.795-5.578,24.154,8.773-1.033,23.144-9.068,56.94-14.036,80.334-8.068,37.999-19.664,75.06-29.267,112.679,7.374.325,14.893-.406,22.264-.039,4.524.225,25.532,3.161,27.643,1.954.995-.569.411-3.744,4.023-2.855,13.261,9.113,10.599,17.309-3.02,23.723-19.136,9.011-41.204,12.193-61.253,18.793-8.877,38.548-19.793,77.545-26.708,116.446-3.645,20.505-.576,57.601-35.017,52.443-30.968-4.638-20.274-43.996-16.459-63.392,6.445-32.768,16.314-65.022,23.592-97.611-5.302-.399-11.326.55-16.519,0Z"
        />
        <path
          className="logo-path"
          d="M922.707,492.052l-28.501,38.132c-30.624,35.263-68.602,22.6-75.024-21.602-8.011-55.141,17.983-118.719,51.797-162.659,3.376-4.388,14.22-14.655,15.885-18.363.408-.909-3.993-7.206,3.415-8.59,10.259-1.917,16.075,4.036,15.342,13.403-.791,10.107-13.936,33.66-18.242,45.154-14.741,39.349-23.331,83.433-21.06,125.265,21.443-18.697,35.994-43.284,49.017-67.705,8.363-15.683,16.798-33.262,23.865-49.511,7.535-17.326,20.835-64.315,37.004-72.591,15.528-7.947,31.186,2.156,30.906,18.326-.199,11.477-10.372,27.791-14.285,39.288-12.047,35.394-18.667,83.677-21.108,120.92-.575,8.772-2.695,37.063.617,43.475.958,1.855,4.189,3.485,5.583,5.483,12.598,18.052-17.391,42.403-40.316,27.295-21.894-14.428-15.262-54.05-14.895-75.721Z"
        />
        <path
          className="logo-path"
          d="M1109.567,340.45l17.631-22.587c13.408-14.657,33.542-25.351,54.002-16.527,31.556,13.609,61.25,102.51,19.464,115.957-11.023,3.547-26.392-2.042-28.376-14.013-1.719-10.373.166-24.95-1.222-36.476-.77-6.392-1.84-14.2-5.117-19.877-3.387.083-29.631,41.044-33.381,46.96-21.826,34.43-54.93,87.435-66.831,125.077-4.926,15.579-1.66,43.904-25.071,45.168-32.88,1.775-24.07-39.298-20.78-58.335,5.452-31.554,17.415-59.593,26.687-89.852,9.174-29.94,14.682-63.353,25.064-92.459,14.03-39.331,47.161-14.383,37.93,16.963Z"
        />
        <path
          className="logo-path"
          d="M1370.252,307.397c14.209-.307,24.105,8.89,24.999,22.109,2.491,36.835-62.222,98.906-91.483,120.582-11.356,8.412-22.967,15.372-36.472,20.412-1.204,28.648,6.694,46.281,39.759,33.22,20.196-7.977,33.948-22.465,51.195-31.246,18.822-9.584,36.463,9.14,24.725,25.483-30.992,43.15-108.66,89.163-151.307,33.133-35.974-47.264-10.672-125.235,27.101-165.397,22.707-24.144,76.751-57.546,111.483-58.295ZM1352.217,339.392c-2.079-1.643-20.21,11.307-22.801,13.413-26.972,21.926-49.237,54.661-56.936,87.631l25.642-26.853c19.658-23.587,40.297-46.895,54.095-74.19Z"
        />
        <path
          className="logo-path"
          d="M1426.677,460.178c11.506-10.774,30.301-6.287,36.377,7.37,5.827,13.099,7.699,28.68,14.285,42.425,3.112,6.494,7.506,17.814,13.313,5.74,6.951-14.453,1.421-53.785-2.081-70.096-7.597-35.386-25.956-68.764-12.218-105.74,20.861-56.151,87.248-38.541,117.864-.409,6.278,7.819,24.789,31.654,1.818,28.377-17.55-14.541-41.753-33.365-66.688-30.639-4.038.441-6.542,1.768-7.767,5.572-7.189,22.317,7.612,54.053,13.734,75.929,12.56,44.881,29.201,136.828-36.38,152.127-57.37,13.383-75.86-42.342-78.35-84.711-.558-9.488-1.502-18.835,6.092-25.946Z"
        />
      </svg>
    </div>
  );
}
